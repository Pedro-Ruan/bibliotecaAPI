// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using bibliotecaAPI.Data;

#nullable disable

namespace bibliotecaAPI.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("bibliotecaAPI.Models.Alugar", b =>
                {
                    b.Property<int>("IdLivro")
                        .HasColumnType("int");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int");

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataLivroAlugado")
                        .HasColumnType("datetime2");

                    b.Property<int>("LivroId")
                        .HasColumnType("int");

                    b.HasKey("IdLivro", "IdCliente");

                    b.HasIndex("ClienteId");

                    b.HasIndex("LivroId");

                    b.ToTable("TB_LivrosAlugados", (string)null);
                });

            modelBuilder.Entity("bibliotecaAPI.Models.Autor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<double>("Latitude")
                        .HasColumnType("float");

                    b.Property<double>("Longitude")
                        .HasColumnType("float");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TB_Autor", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Cpf = "12345678910",
                            Latitude = 0.0,
                            Longitude = 0.0,
                            Nome = "J.K. Rowling"
                        });
                });

            modelBuilder.Entity("bibliotecaAPI.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DataNascimento")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Latitude")
                        .HasColumnType("int");

                    b.Property<int?>("Longitude")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Id");

                    b.ToTable("TB_Cliente", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Cpf = "23456789101",
                            Latitude = 0,
                            Longitude = 0,
                            Nome = "Pedro Ruan"
                        },
                        new
                        {
                            Id = 2,
                            Cpf = "12345678917",
                            Latitude = 0,
                            Longitude = 0,
                            Nome = "Maribode"
                        });
                });

            modelBuilder.Entity("bibliotecaAPI.Models.Livro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Editora")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdAutor")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Preco")
                        .HasColumnType("float");

                    b.Property<int>("QtdPaginas")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdAutor");

                    b.ToTable("TB_Livro", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Editora = "PedroBala",
                            IdAutor = 1,
                            Nome = "Harry Potter",
                            Preco = 50.0,
                            QtdPaginas = 365
                        });
                });

            modelBuilder.Entity("bibliotecaAPI.Models.Alugar", b =>
                {
                    b.HasOne("bibliotecaAPI.Models.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("bibliotecaAPI.Models.Livro", "Livro")
                        .WithMany()
                        .HasForeignKey("LivroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Livro");
                });

            modelBuilder.Entity("bibliotecaAPI.Models.Livro", b =>
                {
                    b.HasOne("bibliotecaAPI.Models.Autor", "Autor")
                        .WithMany("Livros")
                        .HasForeignKey("IdAutor");

                    b.Navigation("Autor");
                });

            modelBuilder.Entity("bibliotecaAPI.Models.Autor", b =>
                {
                    b.Navigation("Livros");
                });
#pragma warning restore 612, 618
        }
    }
}
